#################################################################################
#                               OneBranch Pipelines                             #
# This pipeline was created by EasyStart from a sample located at:              #
#   https://aka.ms/obpipelines/easystart/samples                                #
# Documentation:  https://aka.ms/obpipelines                                    #
# Yaml Schema:    https://aka.ms/obpipelines/yaml/schema                        #
# Retail Tasks:   https://aka.ms/obpipelines/tasks                              #
# Support:        https://aka.ms/onebranchsup                                   #
#################################################################################

trigger: none

variables:
  CDP_DEFINITION_BUILD_COUNT: $[counter('', 0)] # needed for onebranch.pipeline.version task https://aka.ms/obpipelines/versioning
  LinuxContainerImage: 'onebranch.azurecr.io/linux/ubuntu-2004:latest' # Docker image which is used to build the project https://aka.ms/obpipelines/containers
  DEBIAN_FRONTEND: noninteractive

resources:
  repositories: 
    - repository: templates
      type: git
      name: OneBranch.Pipelines/GovernedTemplates
      ref: refs/heads/main

extends:
  template: v2/OneBranch.NonOfficial.CrossPlat.yml@templates # https://aka.ms/obpipelines/templates
  parameters:
    globalSdl: # https://aka.ms/obpipelines/sdl
      # tsa:
      #  enabled: true # SDL results of non-official builds aren't uploaded to TSA by default.
      # credscan:
      #   suppressionsFile: $(Build.SourcesDirectory)\.config\CredScanSuppressions.json
      policheck:
        break: true # always break the build on policheck issues. You can disable it by setting to 'false'
      # suppression:
      #   suppressionFile: $(Build.SourcesDirectory)\.gdn\global.gdnsuppress

    stages:
    - stage: Build
      jobs:
      - job: BuildAngular
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts

        steps: # These steps will be run in unrestricted container's network
          - task: onebranch.pipeline.version@1
            displayName: 'Setup BuildNumber'
            inputs:
              system: 'RevisionCounter'
              major: '1'
              minor: '0'
              exclude_commit: true

          - task: NodeTool@0
            inputs:
                versionSpec: '14.18.x'
            displayName: 'Install Node.js'

          - task: npmAuthenticate@0
            inputs:
              workingFile: './AngularApp/.npmrc'

          - script: |
              cd AngularApp
              npm install
              npm run build-applens
            displayName: 'npm install and build'

          - task: CopyFiles@2
            inputs:
              SourceFolder: 'ApplensBackend/wwwroot'
              Contents: '**'
              TargetFolder: '$(Build.SourcesDirectory)/out'

      - job: BuildApplensBackend
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts

        steps:
          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: 'echo ''export DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1'' >> ~/.bashrc'
                
          - task: UseDotNet@2
            displayName: 'Install DotNet'
            inputs:
              packageType: 'sdk'
              version: '5.0.x'

          - task: DotNetCoreCLI@2
            inputs:
              command: 'restore'
              projects: 'ApplensBackend/AppLensV3.csproj'
              feedsToUse: 'config'
              nugetConfigPath: 'ApplensBackend/nuget.config'

          - task: DotNetCoreCLI@2
            displayName: Build
            inputs:
              projects: ApplensBackend/AppLensV3.csproj
              arguments: '--configuration $(BuildConfiguration)'

          - task: DotNetCoreCLI@2
            displayName: Publish
            inputs:
              command: publish
              publishWebProjects: false
              projects: ApplensBackend/AppLensV3.csproj
              arguments: '--configuration $(BuildConfiguration) --output $(ob_outputDirectory)'
              zipAfterPublish: false

    - stage: Package
      dependsOn: Build
      jobs:
      - job: PackageArtifacts
        pool:
          type: linux

        variables: # More settings at https://aka.ms/obpipelines/yaml/jobs
          ob_outputDirectory: '$(Build.SourcesDirectory)/out' # this directory is uploaded to pipeline artifacts, reddog and cloudvault. More info at https://aka.ms/obpipelines/artifacts          

        steps: # These steps will be run in unrestricted container's network
        - task: DownloadBuildArtifacts@1
          displayName: 'Download Applens Client Build Artifacts'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop_Build_BuildAngular'
            downloadPath: '$(System.ArtifactsDirectory)/drop_Build_BuildAngular'

        - task: DownloadBuildArtifacts@1
          displayName: 'Download Applens Backend Build Artifacts'
          inputs:
            buildType: 'current'
            downloadType: 'single'
            artifactName: 'drop_Build_BuildApplensBackend'
            downloadPath: '$(System.ArtifactsDirectory)/drop_Build_BuildApplensBackend'

        - task: CopyFiles@2
          displayName: 'Copy Backend Files to: $(System.ArtifactsDirectory)/applensdrop'
          inputs:
            SourceFolder: '$(System.ArtifactsDirectory)/drop_Build_BuildApplensBackend'
            TargetFolder: '$(System.ArtifactsDirectory)/applensdrop'

        - task: CopyFiles@2
          displayName: 'Copy Client Files to: $(System.ArtifactsDirectory)/applensdrop/ApplensBackend/wwwroot'
          inputs:
            SourceFolder: '$(System.ArtifactsDirectory)/drop_Build_BuildAngular'
            TargetFolder: '$(System.ArtifactsDirectory)/applensdrop/ApplensBackend/wwwroot'

        - task: CopyFiles@2
          displayName: 'Copy ev2 root'
          inputs:
            SourceFolder: 'ServiceGroupRoot'
            Contents: '**'
            TargetFolder: '$(ob_outputDirectory)/Ev2ServiceGroupRoot'

        - task: ArchiveFiles@2
          inputs:
            rootFolderOrFile: '$(System.ArtifactsDirectory)/applensdrop/ApplensBackend'
            includeRootFolder: false
            archiveType: 'zip'
            archiveFile: '$(ob_outputDirectory)/Applens.zip'
            replaceExistingArchive: true

        - task: DeleteFiles@1
          inputs:
            SourceFolder: '$(System.ArtifactsDirectory)'
            Contents: |
              drop_Build_BuildApplensBackend
              drop_Build_BuildAngular
              applensdrop